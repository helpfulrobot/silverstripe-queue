{"name":"SilverStripe Queue Module","tagline":"Simple multi driver queue system.","body":"# Queue Module\r\n\r\n[![Build Status](https://travis-ci.org/studiobonito/silverstripe-queue.svg?branch=master)](https://travis-ci.org/studiobonito/silverstripe-queue)\r\n\r\n## Overview\r\n\r\nSimple multi driver queue system. This is essentially a port of the [Laravel](http://laravel.com/) queue system.\r\n\r\n**Still very much a WIP not for use in production!**\r\n\r\nAlthough it would be better to use `illuminate/queue` directly it has too many dependancies that would replicate `silverstripe/framework` functionality at this time. By porting the code we can take advantage of SilverStripes command line framework and dependancy injection whilst still having a feature rich and multi backend queue system.\r\n\r\nSo our thanks go to [Taylor Otwell](https://twitter.com/taylorotwell) et al for their excellent work on [Laravel](http://laravel.com/).\r\n\r\n## Requirements\r\n\r\n- SilverStripe 3.1 or newer.\r\n- `pda/pheanstalk` 2.1 or newer for Beanstalkd support\r\n\r\n## Supported Backends\r\n\r\n- [x] Synchronous\r\n- [x] SilverStripe Database\r\n- [x] Beanstalkd\r\n- [ ] IronMQ\r\n- [ ] Amazon SQS\r\n- [ ] Redis\r\n\r\n## Installation Instructions\r\n\r\n### Composer\r\n\r\nRun the following to add this module as a requirement and install it via composer.\r\n\r\n```bash\r\n$ composer require studiobonito/silverstripe-queue\r\n```\r\n\r\n### Manual\r\n\r\nCopy the 'queue' folder to your the root of your SilverStripe installation.\r\n\r\n## Configuration Overview\r\n\r\nConfigure the queue drivers with the following YAML.\r\n\r\n```yaml\r\nStudioBonito\\SilverStripe\\Queue\\QueueManager:\r\n    default: 'db'\r\n    db:\r\n        driver: 'db'\r\n        queue: 'default'\r\n    beanstalkd:\r\n        driver: 'beanstalkd'\r\n        host: 'localhost'\r\n        queue: 'default'\r\n        ttr: 60\r\n```\r\n\r\n## Usage Overview\r\n\r\n### Import QueueManager\r\n\r\nImport the `QueueManager` class for ease of use.\r\n\r\n```php\r\nuse StudioBonito\\SilverStripe\\Queue\\QueueManager;\r\n\r\n```\r\n\r\n### Push A Job Onto The Queue\r\n\r\nUse `QueueManager::inst()` to get an instance of the `QueueManger` class and then call the `push()` method passing in the name of a job handler and an array of data.\r\n\r\n```php\r\nQueueManager::inst()->push('SendEmail', array('message' => $message));\r\n\r\n```\r\n\r\n### Creating A Job Handler\r\n\r\nJob handlers are simple classes that contain a `run` method with `$job` and `$data` parameters.\r\n\r\n```php\r\nclass SendEmail {\r\n\r\n    public function run($job, $data)\r\n    {\r\n        // Code for processing job goes here.\r\n    }\r\n}\r\n```\r\n\r\n## Contributing\r\n\r\n### Unit Testing\r\n\r\n```bash\r\n$ composer install --prefer-dist --dev\r\n$ phpunit\r\n```\r\n\r\n## License\r\n\r\nAll original work copyright of Taylor Otwell under [MIT license](http://opensource.org/licenses/MIT).\r\nAll subsequent work copyright [Studio Bonito Ltd.](http://www.studiobonito.co.uk/) under BSD-2-Clause license.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}